(add-to-list 'auto-mode-alist '("\\.js\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.html\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.vue\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.ts\\'" . typescript-mode))
(add-to-list 'auto-mode-alist '("\\.rs\\'" . rust-mode))
(add-to-list 'auto-mode-alist '("\\.go\\'" . go-mode))
(add-to-list 'auto-mode-alist '("\\.ron\\'" . ron-mode))
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(add-to-list 'auto-mode-alist '("\\.yaml\\'" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.yml\\'" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.lua\\'" . lua-mode))
(add-to-list 'auto-mode-alist '("\\.cjs\\'" . js-mode))
(add-to-list 'auto-mode-alist '("\\.http\\'" . restclient-mode))
(add-to-list 'auto-mode-alist '("\\.fish\\'" . fish-mode))
(add-to-list 'auto-mode-alist '("\\.kt\\'" . kotlin-mode))
(add-to-list 'auto-mode-alist '("\\.gradle\\'" . groovy-mode))
(add-to-list 'auto-mode-alist '("\\.tsx\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.jsx\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.fnl\\'" . fennel-mode))
(add-to-list 'auto-mode-alist '("\\.proto\\'" . protobuf-mode))
(add-to-list 'auto-mode-alist '("\\.clj\\'" . clojure-mode))
(add-to-list 'auto-mode-alist '("\\.cljs\\'" . clojurescript-mode))
(add-to-list 'auto-mode-alist '("Dockerfile\\'" . dockerfile-mode))
(add-to-list 'auto-mode-alist '("\\.glsl\\'" . glsl-mode))

(autoload 'glsl-mode "init-glsl")
(autoload 'dockerfile-mode "dockerfile-mode")
(autoload 'clojurescript-mode "init-clojure")
(autoload 'clojure-mode "clojure-mode")
(autoload 'clojure-mode "init-clojure")
(autoload 'protobuf-mode "protobuf-mode")
(autoload 'fennel-mode "fennel-mode")
(autoload 'groovy-mode "groovy-mode")
(autoload 'kotlin-mode "kotlin-mode")
(autoload 'web-mode "init-web")
(autoload 'typescript-mode "init-typescript")
(autoload 'rust-mode "init-rust")
(autoload 'go-mode "init-golang")
(autoload 'ron-mode "init-ron")
(autoload 'org-mode "init-org")
(autoload 'yaml-mode "yaml-mode")
(autoload 'lua-mode "lua-mode")
(autoload 'fish-mode"fish-mode")
(autoload 'restclient-mode "init-restclient")
(autoload 'corfu-mode "init-corfu" nil t)
(autoload 'grammatical-edit-mode "init-grammatical-edit")
(autoload 'tree-sitter-mode "init-treesitter")
(autoload 'clm/toggle-command-log-buffer "init-clm")
(autoload 'notmuch "init-notmuch" nil t)
(autoload 'anzu-query-replace "init-anzu" nil t)
(autoload 'anzu-query-replace-regexp "init-anzu" nil t)
(autoload 'rainbow-mode "rainbow-mode")
(autoload 'elispfl-mode "elispfl")

(dolist (hook (list 'web-mode-hook
		    'typescript-mode-hook
		    'emacs-lisp-mode-hook
		    'rust-mode-hook))
  (add-hook hook #'(lambda ()
		     (grammatical-edit-mode 1)
		     (rainbow-mode t)
		     ;; (tree-sitter-mode t)
		     ;; (tree-sitter-hl-mode t)
		     )))

;; EmacsLisp Hook
(add-hook 'emacs-lisp-mode-hook #'(lambda ()
				    (elispfl-mode t)))
(add-hook 'org-mode-hook #'(lambda()
			     (org-appear-mode t)))
(add-hook 'prog-mode-hook #'(lambda ()
			      (require 'init-hl-todo)
			      ;; (require 'init-diff-hl)
			      ))

(autoload 'minibuffer-mode "init-minibuffer-modifier-keys" nil t)
(autoload 'execute-extended-command "init-vertico" nil t)
(autoload 'tldr "init-tldr" nil t)
(provide 'init-mode)
